name: CI/CD workflow

on:
  push:
    branches:
      - main #main 브랜치에 push 될 때 마다

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
      - name: 레포지토리 체크아웃
        uses: actions/checkout@v4

      - name: JDK 17 설치
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Gradle 설정
        uses: gradle/actions/setup-gradle@v3

      - name: gradlew 실행 권한 부여
        run: chmod +x gradlew

      - name: 빌드 및 테스트
        run: ./gradlew build

      - name: JAR와 스크립트를 AWS EC2로 배포
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ec2-user
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "build/libs/sspoid.jar"
          target: "/home/ec2-user/sspoid"
          overwrite: true

      - name: EC2에서 deploy.sh 실행
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ec2-user
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            PID=$(pgrep -f "sspoid.jar" || echo "")
            if [ -n "$PID" ]; then
              kill -9 "$PID"
            fi
            
            nohup java -jar \
              -Dspring.datasource.url=${{ secrets.RDS_HOST }} \
              -Dspring.datasource.username=${{ secrets.RDS_USERNAME }} \
              -Dspring.datasource.password=${{ secrets.RDS_PASSWORD }} \
              /home/ec2-user/sspoid/sspoid.jar > /home/ec2-user/sspoid/nohup.out 2>&1 &
